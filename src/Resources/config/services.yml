services:
    # default configuration for services in *this* file
    _defaults:
        # automatically injects dependencies in your services
        autowire: true
        # automatically registers your services as commands, event subscribers, etc.
        autoconfigure: true
        # this means you cannot fetch services directly from the container via $container->get()
        # if you need to do this, you can override this setting on individual services
        public: false

    # controllers are imported separately to make sure they're public
    # and have a tag that allows actions to type-hint services
    TorqIT\DataImporterExtensionsBundle\Controller\:
        resource: '../../Controller'
        public: true
        tags: ['controller.service_arguments']


    TorqIT\DataImporterExtensionsBundle\Resolver\Load\AdvancedPathStrategy:
        tags:
            - { name: "pimcore.datahub.data_importer.resolver.load", type: "advancedPath" }

    TorqIT\DataImporterExtensionsBundle\Resolver\Load\PropertyStrategy:
        tags:
            - { name: "pimcore.datahub.data_importer.resolver.load", type: "property" }

    TorqIT\DataImporterExtensionsBundle\Resolver\Location\AdvancedParentStrategy:
        tags:
            - { name: "pimcore.datahub.data_importer.resolver.location", type: "advancedParent" }

    TorqIT\DataImporterExtensionsBundle\DataSource\Interpreter\AdvancedXlsxFileInterpreter:
        calls:
            - [ setLogger, [ '@logger' ] ]
        tags:
            - { name: monolog.logger, channel: 'DATA-IMPORTER' }
            - { name: "pimcore.datahub.data_importer.interpreter", type: "advancedXlsx" }

    TorqIT\DataImporterExtensionsBundle\DataSource\Interpreter\BulkXlsxFileInterpreter:
        calls:
            - [ setLogger, [ '@logger' ] ]
        tags:
            - { name: monolog.logger, channel: 'DATA-IMPORTER' }
            - { name: "pimcore.datahub.data_importer.interpreter", type: "bulkXlsx" }

    TorqIT\DataImporterExtensionsBundle\DataSource\Interpreter\PiesFileInterpreter:
        calls:
            - [ setLogger, [ '@logger' ] ]
        tags:
            - { name: monolog.logger, channel: 'DATA-IMPORTER' }
            - { name: "pimcore.datahub.data_importer.interpreter", type: "pies" }

    TorqIT\DataImporterExtensionsBundle\DataSource\Interpreter\AcesFileInterpreter:
        calls:
            - [ setLogger, [ '@logger' ] ]
        tags:
            - { name: monolog.logger, channel: 'DATA-IMPORTER' }
            - { name: "pimcore.datahub.data_importer.interpreter", type: "aces" }


    TorqIT\DataImporterExtensionsBundle\Mapping\Operator\Simple\SafeKey:
        tags:
            - { name: "pimcore.datahub.data_importer.operator", type: "safeKey" }

    TorqIT\DataImporterExtensionsBundle\Mapping\Operator\Simple\Constant:
        tags:
            - { name: "pimcore.datahub.data_importer.operator", type: "constant" }


    TorqIT\DataImporterExtensionsBundle\Mapping\DataTarget\Property:
        tags:
            - { name: "pimcore.datahub.data_importer.data_target", type: "property" }

    TorqIT\DataImporterExtensionsBundle\EventListener\PiesSaveListener:
      tags:
          - { name: kernel.event_listener, event: Pimcore\Bundle\DataImporterBundle\Event\DataObject\PreSaveEvent, method: piesSave }

    TorqIT\DataImporterExtensionsBundle\EventListener\AcesSaveListener:
      tags:
          - { name: kernel.event_listener, event: Pimcore\Bundle\DataImporterBundle\Event\DataObject\PreSaveEvent, method: acesSave }


# add more services, or override services that need manual wiring
#    TorqIT\DataImporterExtensionsBundle\ExampleClass:
#        arguments:
#            - "@service_id"
#            - "plain_value"
#            - "%parameter%"
